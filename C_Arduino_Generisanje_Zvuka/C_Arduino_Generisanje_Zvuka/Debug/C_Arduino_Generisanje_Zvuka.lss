
C_Arduino_Generisanje_Zvuka.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000890  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000081c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800100  00800100  00000890  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000890  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000900  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000de7  00000000  00000000  00000930  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006cd  00000000  00000000  00001717  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000443  00000000  00000000  00001de4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000094  00000000  00000000  00002228  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003df  00000000  00000000  000022bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000330  00000000  00000000  0000269b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  000029cb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a6 30       	cpi	r26, 0x06	; 6
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 4f 01 	call	0x29e	; 0x29e <main>
  88:	0c 94 0c 04 	jmp	0x818	; 0x818 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <soundon>:
Function To Initialize TIMER0 In Fast
PWWM Mode.

*/

void soundon(double tone, double len) {
  90:	8f 92       	push	r8
  92:	9f 92       	push	r9
  94:	af 92       	push	r10
  96:	bf 92       	push	r11
  98:	cf 92       	push	r12
  9a:	df 92       	push	r13
  9c:	ef 92       	push	r14
  9e:	ff 92       	push	r15
  a0:	4b 01       	movw	r8, r22
  a2:	5c 01       	movw	r10, r24
  a4:	69 01       	movw	r12, r18
  a6:	7a 01       	movw	r14, r20
	DDRD |= (1 << PORTD5);
  a8:	8a b1       	in	r24, 0x0a	; 10
  aa:	80 62       	ori	r24, 0x20	; 32
  ac:	8a b9       	out	0x0a, r24	; 10
	
	TCCR0A |= (1 << COM0B1) | (1 << WGM01) | (1 << WGM00);
  ae:	84 b5       	in	r24, 0x24	; 36
  b0:	83 62       	ori	r24, 0x23	; 35
  b2:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << WGM02) | (1 << CS02);
  b4:	85 b5       	in	r24, 0x25	; 37
  b6:	8c 60       	ori	r24, 0x0C	; 12
  b8:	85 bd       	out	0x25, r24	; 37
	OCR0A = tone;
  ba:	c5 01       	movw	r24, r10
  bc:	b4 01       	movw	r22, r8
  be:	0e 94 b9 02 	call	0x572	; 0x572 <__fixunssfsi>
  c2:	67 bd       	out	0x27, r22	; 39
	OCR0B = tone / 2;
  c4:	20 e0       	ldi	r18, 0x00	; 0
  c6:	30 e0       	ldi	r19, 0x00	; 0
  c8:	40 e0       	ldi	r20, 0x00	; 0
  ca:	5f e3       	ldi	r21, 0x3F	; 63
  cc:	c5 01       	movw	r24, r10
  ce:	b4 01       	movw	r22, r8
  d0:	0e 94 9f 03 	call	0x73e	; 0x73e <__mulsf3>
  d4:	0e 94 b9 02 	call	0x572	; 0x572 <__fixunssfsi>
  d8:	68 bd       	out	0x28, r22	; 40
	length = (60.0/tempo)*len*1000.0;
  da:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  de:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  e2:	07 2e       	mov	r0, r23
  e4:	00 0c       	add	r0, r0
  e6:	88 0b       	sbc	r24, r24
  e8:	99 0b       	sbc	r25, r25
  ea:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <__floatsisf>
  ee:	9b 01       	movw	r18, r22
  f0:	ac 01       	movw	r20, r24
  f2:	60 e0       	ldi	r22, 0x00	; 0
  f4:	70 e0       	ldi	r23, 0x00	; 0
  f6:	80 e7       	ldi	r24, 0x70	; 112
  f8:	92 e4       	ldi	r25, 0x42	; 66
  fa:	0e 94 47 02 	call	0x48e	; 0x48e <__divsf3>
  fe:	a7 01       	movw	r20, r14
 100:	96 01       	movw	r18, r12
 102:	0e 94 9f 03 	call	0x73e	; 0x73e <__mulsf3>
 106:	20 e0       	ldi	r18, 0x00	; 0
 108:	30 e0       	ldi	r19, 0x00	; 0
 10a:	4a e7       	ldi	r20, 0x7A	; 122
 10c:	54 e4       	ldi	r21, 0x44	; 68
 10e:	0e 94 9f 03 	call	0x73e	; 0x73e <__mulsf3>
 112:	6b 01       	movw	r12, r22
 114:	7c 01       	movw	r14, r24
 116:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <length>
 11a:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <length+0x1>
 11e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <length+0x2>
 122:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <length+0x3>

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 126:	20 e0       	ldi	r18, 0x00	; 0
 128:	30 e0       	ldi	r19, 0x00	; 0
 12a:	4a e7       	ldi	r20, 0x7A	; 122
 12c:	55 e4       	ldi	r21, 0x45	; 69
 12e:	0e 94 9f 03 	call	0x73e	; 0x73e <__mulsf3>
 132:	4b 01       	movw	r8, r22
 134:	5c 01       	movw	r10, r24
	if (__tmp < 1.0)
 136:	20 e0       	ldi	r18, 0x00	; 0
 138:	30 e0       	ldi	r19, 0x00	; 0
 13a:	40 e8       	ldi	r20, 0x80	; 128
 13c:	5f e3       	ldi	r21, 0x3F	; 63
 13e:	0e 94 42 02 	call	0x484	; 0x484 <__cmpsf2>
 142:	88 23       	and	r24, r24
 144:	24 f1       	brlt	.+72     	; 0x18e <soundon+0xfe>
		__ticks = 1;
	else if (__tmp > 65535)
 146:	20 e0       	ldi	r18, 0x00	; 0
 148:	3f ef       	ldi	r19, 0xFF	; 255
 14a:	4f e7       	ldi	r20, 0x7F	; 127
 14c:	57 e4       	ldi	r21, 0x47	; 71
 14e:	c5 01       	movw	r24, r10
 150:	b4 01       	movw	r22, r8
 152:	0e 94 9a 03 	call	0x734	; 0x734 <__gesf2>
 156:	18 16       	cp	r1, r24
 158:	ac f4       	brge	.+42     	; 0x184 <soundon+0xf4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 15a:	20 e0       	ldi	r18, 0x00	; 0
 15c:	30 e0       	ldi	r19, 0x00	; 0
 15e:	40 e2       	ldi	r20, 0x20	; 32
 160:	51 e4       	ldi	r21, 0x41	; 65
 162:	c7 01       	movw	r24, r14
 164:	b6 01       	movw	r22, r12
 166:	0e 94 9f 03 	call	0x73e	; 0x73e <__mulsf3>
 16a:	0e 94 b9 02 	call	0x572	; 0x572 <__fixunssfsi>
 16e:	06 c0       	rjmp	.+12     	; 0x17c <soundon+0xec>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 170:	80 e9       	ldi	r24, 0x90	; 144
 172:	91 e0       	ldi	r25, 0x01	; 1
 174:	01 97       	sbiw	r24, 0x01	; 1
 176:	f1 f7       	brne	.-4      	; 0x174 <soundon+0xe4>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 178:	61 50       	subi	r22, 0x01	; 1
 17a:	71 09       	sbc	r23, r1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 17c:	61 15       	cp	r22, r1
 17e:	71 05       	cpc	r23, r1
 180:	b9 f7       	brne	.-18     	; 0x170 <soundon+0xe0>
 182:	0a c0       	rjmp	.+20     	; 0x198 <soundon+0x108>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 184:	c5 01       	movw	r24, r10
 186:	b4 01       	movw	r22, r8
 188:	0e 94 b9 02 	call	0x572	; 0x572 <__fixunssfsi>
 18c:	02 c0       	rjmp	.+4      	; 0x192 <soundon+0x102>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
 18e:	61 e0       	ldi	r22, 0x01	; 1
 190:	70 e0       	ldi	r23, 0x00	; 0
 192:	cb 01       	movw	r24, r22
 194:	01 97       	sbiw	r24, 0x01	; 1
 196:	f1 f7       	brne	.-4      	; 0x194 <soundon+0x104>
	_delay_ms(length);
	DDRD &= (0 << PORTD5);
 198:	8a b1       	in	r24, 0x0a	; 10
 19a:	1a b8       	out	0x0a, r1	; 10
 19c:	80 e4       	ldi	r24, 0x40	; 64
 19e:	9c e9       	ldi	r25, 0x9C	; 156
 1a0:	01 97       	sbiw	r24, 0x01	; 1
 1a2:	f1 f7       	brne	.-4      	; 0x1a0 <soundon+0x110>
	_delay_ms(10);
}
 1a4:	ff 90       	pop	r15
 1a6:	ef 90       	pop	r14
 1a8:	df 90       	pop	r13
 1aa:	cf 90       	pop	r12
 1ac:	bf 90       	pop	r11
 1ae:	af 90       	pop	r10
 1b0:	9f 90       	pop	r9
 1b2:	8f 90       	pop	r8
 1b4:	08 95       	ret

000001b6 <pause>:

void pause(double len) {
 1b6:	8f 92       	push	r8
 1b8:	9f 92       	push	r9
 1ba:	af 92       	push	r10
 1bc:	bf 92       	push	r11
 1be:	cf 92       	push	r12
 1c0:	df 92       	push	r13
 1c2:	ef 92       	push	r14
 1c4:	ff 92       	push	r15
 1c6:	6b 01       	movw	r12, r22
 1c8:	7c 01       	movw	r14, r24
	DDRD &= (0 << PORTD5);
 1ca:	8a b1       	in	r24, 0x0a	; 10
 1cc:	1a b8       	out	0x0a, r1	; 10
	length = (60.0/tempo)*len*1000.0;
 1ce:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1d2:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1d6:	07 2e       	mov	r0, r23
 1d8:	00 0c       	add	r0, r0
 1da:	88 0b       	sbc	r24, r24
 1dc:	99 0b       	sbc	r25, r25
 1de:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <__floatsisf>
 1e2:	9b 01       	movw	r18, r22
 1e4:	ac 01       	movw	r20, r24
 1e6:	60 e0       	ldi	r22, 0x00	; 0
 1e8:	70 e0       	ldi	r23, 0x00	; 0
 1ea:	80 e7       	ldi	r24, 0x70	; 112
 1ec:	92 e4       	ldi	r25, 0x42	; 66
 1ee:	0e 94 47 02 	call	0x48e	; 0x48e <__divsf3>
 1f2:	a7 01       	movw	r20, r14
 1f4:	96 01       	movw	r18, r12
 1f6:	0e 94 9f 03 	call	0x73e	; 0x73e <__mulsf3>
 1fa:	20 e0       	ldi	r18, 0x00	; 0
 1fc:	30 e0       	ldi	r19, 0x00	; 0
 1fe:	4a e7       	ldi	r20, 0x7A	; 122
 200:	54 e4       	ldi	r21, 0x44	; 68
 202:	0e 94 9f 03 	call	0x73e	; 0x73e <__mulsf3>
 206:	6b 01       	movw	r12, r22
 208:	7c 01       	movw	r14, r24
 20a:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <length>
 20e:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <length+0x1>
 212:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <length+0x2>
 216:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <length+0x3>

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 21a:	20 e0       	ldi	r18, 0x00	; 0
 21c:	30 e0       	ldi	r19, 0x00	; 0
 21e:	4a e7       	ldi	r20, 0x7A	; 122
 220:	55 e4       	ldi	r21, 0x45	; 69
 222:	0e 94 9f 03 	call	0x73e	; 0x73e <__mulsf3>
 226:	4b 01       	movw	r8, r22
 228:	5c 01       	movw	r10, r24
	if (__tmp < 1.0)
 22a:	20 e0       	ldi	r18, 0x00	; 0
 22c:	30 e0       	ldi	r19, 0x00	; 0
 22e:	40 e8       	ldi	r20, 0x80	; 128
 230:	5f e3       	ldi	r21, 0x3F	; 63
 232:	0e 94 42 02 	call	0x484	; 0x484 <__cmpsf2>
 236:	88 23       	and	r24, r24
 238:	24 f1       	brlt	.+72     	; 0x282 <pause+0xcc>
		__ticks = 1;
	else if (__tmp > 65535)
 23a:	20 e0       	ldi	r18, 0x00	; 0
 23c:	3f ef       	ldi	r19, 0xFF	; 255
 23e:	4f e7       	ldi	r20, 0x7F	; 127
 240:	57 e4       	ldi	r21, 0x47	; 71
 242:	c5 01       	movw	r24, r10
 244:	b4 01       	movw	r22, r8
 246:	0e 94 9a 03 	call	0x734	; 0x734 <__gesf2>
 24a:	18 16       	cp	r1, r24
 24c:	ac f4       	brge	.+42     	; 0x278 <pause+0xc2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 24e:	20 e0       	ldi	r18, 0x00	; 0
 250:	30 e0       	ldi	r19, 0x00	; 0
 252:	40 e2       	ldi	r20, 0x20	; 32
 254:	51 e4       	ldi	r21, 0x41	; 65
 256:	c7 01       	movw	r24, r14
 258:	b6 01       	movw	r22, r12
 25a:	0e 94 9f 03 	call	0x73e	; 0x73e <__mulsf3>
 25e:	0e 94 b9 02 	call	0x572	; 0x572 <__fixunssfsi>
 262:	06 c0       	rjmp	.+12     	; 0x270 <pause+0xba>
 264:	80 e9       	ldi	r24, 0x90	; 144
 266:	91 e0       	ldi	r25, 0x01	; 1
 268:	01 97       	sbiw	r24, 0x01	; 1
 26a:	f1 f7       	brne	.-4      	; 0x268 <pause+0xb2>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 26c:	61 50       	subi	r22, 0x01	; 1
 26e:	71 09       	sbc	r23, r1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 270:	61 15       	cp	r22, r1
 272:	71 05       	cpc	r23, r1
 274:	b9 f7       	brne	.-18     	; 0x264 <pause+0xae>
 276:	0a c0       	rjmp	.+20     	; 0x28c <pause+0xd6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 278:	c5 01       	movw	r24, r10
 27a:	b4 01       	movw	r22, r8
 27c:	0e 94 b9 02 	call	0x572	; 0x572 <__fixunssfsi>
 280:	02 c0       	rjmp	.+4      	; 0x286 <pause+0xd0>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
 282:	61 e0       	ldi	r22, 0x01	; 1
 284:	70 e0       	ldi	r23, 0x00	; 0
 286:	cb 01       	movw	r24, r22
 288:	01 97       	sbiw	r24, 0x01	; 1
 28a:	f1 f7       	brne	.-4      	; 0x288 <pause+0xd2>
	_delay_ms(length);
}
 28c:	ff 90       	pop	r15
 28e:	ef 90       	pop	r14
 290:	df 90       	pop	r13
 292:	cf 90       	pop	r12
 294:	bf 90       	pop	r11
 296:	af 90       	pop	r10
 298:	9f 90       	pop	r9
 29a:	8f 90       	pop	r8
 29c:	08 95       	ret

0000029e <main>:
int main(void)
{
	
    while (1) 
    {
		tempo = 65;
 29e:	81 e4       	ldi	r24, 0x41	; 65
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2a6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		
		soundon(e4, half+quarter);
 2aa:	20 e0       	ldi	r18, 0x00	; 0
 2ac:	30 e0       	ldi	r19, 0x00	; 0
 2ae:	40 e4       	ldi	r20, 0x40	; 64
 2b0:	5f e3       	ldi	r21, 0x3F	; 63
 2b2:	65 e4       	ldi	r22, 0x45	; 69
 2b4:	7b e9       	ldi	r23, 0x9B	; 155
 2b6:	8c e3       	ldi	r24, 0x3C	; 60
 2b8:	93 e4       	ldi	r25, 0x43	; 67
 2ba:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		soundon(f4, half+quarter);
 2be:	20 e0       	ldi	r18, 0x00	; 0
 2c0:	30 e0       	ldi	r19, 0x00	; 0
 2c2:	40 e4       	ldi	r20, 0x40	; 64
 2c4:	5f e3       	ldi	r21, 0x3F	; 63
 2c6:	64 e1       	ldi	r22, 0x14	; 20
 2c8:	77 ef       	ldi	r23, 0xF7	; 247
 2ca:	81 e3       	ldi	r24, 0x31	; 49
 2cc:	93 e4       	ldi	r25, 0x43	; 67
 2ce:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		soundon(g4, half+quarter);
 2d2:	20 e0       	ldi	r18, 0x00	; 0
 2d4:	30 e0       	ldi	r19, 0x00	; 0
 2d6:	40 e4       	ldi	r20, 0x40	; 64
 2d8:	5f e3       	ldi	r21, 0x3F	; 63
 2da:	64 e5       	ldi	r22, 0x54	; 84
 2dc:	70 e7       	ldi	r23, 0x70	; 112
 2de:	8e e1       	ldi	r24, 0x1E	; 30
 2e0:	93 e4       	ldi	r25, 0x43	; 67
 2e2:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		soundon(g4, half+quarter);
 2e6:	20 e0       	ldi	r18, 0x00	; 0
 2e8:	30 e0       	ldi	r19, 0x00	; 0
 2ea:	40 e4       	ldi	r20, 0x40	; 64
 2ec:	5f e3       	ldi	r21, 0x3F	; 63
 2ee:	64 e5       	ldi	r22, 0x54	; 84
 2f0:	70 e7       	ldi	r23, 0x70	; 112
 2f2:	8e e1       	ldi	r24, 0x1E	; 30
 2f4:	93 e4       	ldi	r25, 0x43	; 67
 2f6:	0e 94 48 00 	call	0x90	; 0x90 <soundon>

		soundon(e4, half+quarter);
 2fa:	20 e0       	ldi	r18, 0x00	; 0
 2fc:	30 e0       	ldi	r19, 0x00	; 0
 2fe:	40 e4       	ldi	r20, 0x40	; 64
 300:	5f e3       	ldi	r21, 0x3F	; 63
 302:	65 e4       	ldi	r22, 0x45	; 69
 304:	7b e9       	ldi	r23, 0x9B	; 155
 306:	8c e3       	ldi	r24, 0x3C	; 60
 308:	93 e4       	ldi	r25, 0x43	; 67
 30a:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		soundon(f4, half+quarter);
 30e:	20 e0       	ldi	r18, 0x00	; 0
 310:	30 e0       	ldi	r19, 0x00	; 0
 312:	40 e4       	ldi	r20, 0x40	; 64
 314:	5f e3       	ldi	r21, 0x3F	; 63
 316:	64 e1       	ldi	r22, 0x14	; 20
 318:	77 ef       	ldi	r23, 0xF7	; 247
 31a:	81 e3       	ldi	r24, 0x31	; 49
 31c:	93 e4       	ldi	r25, 0x43	; 67
 31e:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		soundon(g4, half+quarter);
 322:	20 e0       	ldi	r18, 0x00	; 0
 324:	30 e0       	ldi	r19, 0x00	; 0
 326:	40 e4       	ldi	r20, 0x40	; 64
 328:	5f e3       	ldi	r21, 0x3F	; 63
 32a:	64 e5       	ldi	r22, 0x54	; 84
 32c:	70 e7       	ldi	r23, 0x70	; 112
 32e:	8e e1       	ldi	r24, 0x1E	; 30
 330:	93 e4       	ldi	r25, 0x43	; 67
 332:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		soundon(g4, half+quarter);
 336:	20 e0       	ldi	r18, 0x00	; 0
 338:	30 e0       	ldi	r19, 0x00	; 0
 33a:	40 e4       	ldi	r20, 0x40	; 64
 33c:	5f e3       	ldi	r21, 0x3F	; 63
 33e:	64 e5       	ldi	r22, 0x54	; 84
 340:	70 e7       	ldi	r23, 0x70	; 112
 342:	8e e1       	ldi	r24, 0x1E	; 30
 344:	93 e4       	ldi	r25, 0x43	; 67
 346:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		
		soundon(e4, half+quarter);
 34a:	20 e0       	ldi	r18, 0x00	; 0
 34c:	30 e0       	ldi	r19, 0x00	; 0
 34e:	40 e4       	ldi	r20, 0x40	; 64
 350:	5f e3       	ldi	r21, 0x3F	; 63
 352:	65 e4       	ldi	r22, 0x45	; 69
 354:	7b e9       	ldi	r23, 0x9B	; 155
 356:	8c e3       	ldi	r24, 0x3C	; 60
 358:	93 e4       	ldi	r25, 0x43	; 67
 35a:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		soundon(f4, half+quarter);
 35e:	20 e0       	ldi	r18, 0x00	; 0
 360:	30 e0       	ldi	r19, 0x00	; 0
 362:	40 e4       	ldi	r20, 0x40	; 64
 364:	5f e3       	ldi	r21, 0x3F	; 63
 366:	64 e1       	ldi	r22, 0x14	; 20
 368:	77 ef       	ldi	r23, 0xF7	; 247
 36a:	81 e3       	ldi	r24, 0x31	; 49
 36c:	93 e4       	ldi	r25, 0x43	; 67
 36e:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		soundon(g4, whole+quarter);
 372:	20 e0       	ldi	r18, 0x00	; 0
 374:	30 e0       	ldi	r19, 0x00	; 0
 376:	40 ea       	ldi	r20, 0xA0	; 160
 378:	5f e3       	ldi	r21, 0x3F	; 63
 37a:	64 e5       	ldi	r22, 0x54	; 84
 37c:	70 e7       	ldi	r23, 0x70	; 112
 37e:	8e e1       	ldi	r24, 0x1E	; 30
 380:	93 e4       	ldi	r25, 0x43	; 67
 382:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
	
		
		soundon(e4, half+quarter);
 386:	20 e0       	ldi	r18, 0x00	; 0
 388:	30 e0       	ldi	r19, 0x00	; 0
 38a:	40 e4       	ldi	r20, 0x40	; 64
 38c:	5f e3       	ldi	r21, 0x3F	; 63
 38e:	65 e4       	ldi	r22, 0x45	; 69
 390:	7b e9       	ldi	r23, 0x9B	; 155
 392:	8c e3       	ldi	r24, 0x3C	; 60
 394:	93 e4       	ldi	r25, 0x43	; 67
 396:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		soundon(f4, half+quarter);
 39a:	20 e0       	ldi	r18, 0x00	; 0
 39c:	30 e0       	ldi	r19, 0x00	; 0
 39e:	40 e4       	ldi	r20, 0x40	; 64
 3a0:	5f e3       	ldi	r21, 0x3F	; 63
 3a2:	64 e1       	ldi	r22, 0x14	; 20
 3a4:	77 ef       	ldi	r23, 0xF7	; 247
 3a6:	81 e3       	ldi	r24, 0x31	; 49
 3a8:	93 e4       	ldi	r25, 0x43	; 67
 3aa:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		soundon(g4, half+quarter);
 3ae:	20 e0       	ldi	r18, 0x00	; 0
 3b0:	30 e0       	ldi	r19, 0x00	; 0
 3b2:	40 e4       	ldi	r20, 0x40	; 64
 3b4:	5f e3       	ldi	r21, 0x3F	; 63
 3b6:	64 e5       	ldi	r22, 0x54	; 84
 3b8:	70 e7       	ldi	r23, 0x70	; 112
 3ba:	8e e1       	ldi	r24, 0x1E	; 30
 3bc:	93 e4       	ldi	r25, 0x43	; 67
 3be:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		soundon(g4, half+quarter);
 3c2:	20 e0       	ldi	r18, 0x00	; 0
 3c4:	30 e0       	ldi	r19, 0x00	; 0
 3c6:	40 e4       	ldi	r20, 0x40	; 64
 3c8:	5f e3       	ldi	r21, 0x3F	; 63
 3ca:	64 e5       	ldi	r22, 0x54	; 84
 3cc:	70 e7       	ldi	r23, 0x70	; 112
 3ce:	8e e1       	ldi	r24, 0x1E	; 30
 3d0:	93 e4       	ldi	r25, 0x43	; 67
 3d2:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		
		soundon(e4, half+quarter);
 3d6:	20 e0       	ldi	r18, 0x00	; 0
 3d8:	30 e0       	ldi	r19, 0x00	; 0
 3da:	40 e4       	ldi	r20, 0x40	; 64
 3dc:	5f e3       	ldi	r21, 0x3F	; 63
 3de:	65 e4       	ldi	r22, 0x45	; 69
 3e0:	7b e9       	ldi	r23, 0x9B	; 155
 3e2:	8c e3       	ldi	r24, 0x3C	; 60
 3e4:	93 e4       	ldi	r25, 0x43	; 67
 3e6:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		soundon(f4, half+quarter);
 3ea:	20 e0       	ldi	r18, 0x00	; 0
 3ec:	30 e0       	ldi	r19, 0x00	; 0
 3ee:	40 e4       	ldi	r20, 0x40	; 64
 3f0:	5f e3       	ldi	r21, 0x3F	; 63
 3f2:	64 e1       	ldi	r22, 0x14	; 20
 3f4:	77 ef       	ldi	r23, 0xF7	; 247
 3f6:	81 e3       	ldi	r24, 0x31	; 49
 3f8:	93 e4       	ldi	r25, 0x43	; 67
 3fa:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		soundon(g4, whole+quarter);
 3fe:	20 e0       	ldi	r18, 0x00	; 0
 400:	30 e0       	ldi	r19, 0x00	; 0
 402:	40 ea       	ldi	r20, 0xA0	; 160
 404:	5f e3       	ldi	r21, 0x3F	; 63
 406:	64 e5       	ldi	r22, 0x54	; 84
 408:	70 e7       	ldi	r23, 0x70	; 112
 40a:	8e e1       	ldi	r24, 0x1E	; 30
 40c:	93 e4       	ldi	r25, 0x43	; 67
 40e:	0e 94 48 00 	call	0x90	; 0x90 <soundon>


		soundon(g4, half+quarter);
 412:	20 e0       	ldi	r18, 0x00	; 0
 414:	30 e0       	ldi	r19, 0x00	; 0
 416:	40 e4       	ldi	r20, 0x40	; 64
 418:	5f e3       	ldi	r21, 0x3F	; 63
 41a:	64 e5       	ldi	r22, 0x54	; 84
 41c:	70 e7       	ldi	r23, 0x70	; 112
 41e:	8e e1       	ldi	r24, 0x1E	; 30
 420:	93 e4       	ldi	r25, 0x43	; 67
 422:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		soundon(g4, half+quarter);
 426:	20 e0       	ldi	r18, 0x00	; 0
 428:	30 e0       	ldi	r19, 0x00	; 0
 42a:	40 e4       	ldi	r20, 0x40	; 64
 42c:	5f e3       	ldi	r21, 0x3F	; 63
 42e:	64 e5       	ldi	r22, 0x54	; 84
 430:	70 e7       	ldi	r23, 0x70	; 112
 432:	8e e1       	ldi	r24, 0x1E	; 30
 434:	93 e4       	ldi	r25, 0x43	; 67
 436:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		soundon(f4, half+quarter);
 43a:	20 e0       	ldi	r18, 0x00	; 0
 43c:	30 e0       	ldi	r19, 0x00	; 0
 43e:	40 e4       	ldi	r20, 0x40	; 64
 440:	5f e3       	ldi	r21, 0x3F	; 63
 442:	64 e1       	ldi	r22, 0x14	; 20
 444:	77 ef       	ldi	r23, 0xF7	; 247
 446:	81 e3       	ldi	r24, 0x31	; 49
 448:	93 e4       	ldi	r25, 0x43	; 67
 44a:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		soundon(f4, half+quarter);
 44e:	20 e0       	ldi	r18, 0x00	; 0
 450:	30 e0       	ldi	r19, 0x00	; 0
 452:	40 e4       	ldi	r20, 0x40	; 64
 454:	5f e3       	ldi	r21, 0x3F	; 63
 456:	64 e1       	ldi	r22, 0x14	; 20
 458:	77 ef       	ldi	r23, 0xF7	; 247
 45a:	81 e3       	ldi	r24, 0x31	; 49
 45c:	93 e4       	ldi	r25, 0x43	; 67
 45e:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		soundon(e4, whole+quarter);
 462:	20 e0       	ldi	r18, 0x00	; 0
 464:	30 e0       	ldi	r19, 0x00	; 0
 466:	40 ea       	ldi	r20, 0xA0	; 160
 468:	5f e3       	ldi	r21, 0x3F	; 63
 46a:	65 e4       	ldi	r22, 0x45	; 69
 46c:	7b e9       	ldi	r23, 0x9B	; 155
 46e:	8c e3       	ldi	r24, 0x3C	; 60
 470:	93 e4       	ldi	r25, 0x43	; 67
 472:	0e 94 48 00 	call	0x90	; 0x90 <soundon>
		
		pause(whole+whole);
 476:	60 e0       	ldi	r22, 0x00	; 0
 478:	70 e0       	ldi	r23, 0x00	; 0
 47a:	80 e0       	ldi	r24, 0x00	; 0
 47c:	90 e4       	ldi	r25, 0x40	; 64
 47e:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pause>
 482:	0d cf       	rjmp	.-486    	; 0x29e <main>

00000484 <__cmpsf2>:
 484:	0e 94 25 03 	call	0x64a	; 0x64a <__fp_cmp>
 488:	08 f4       	brcc	.+2      	; 0x48c <__cmpsf2+0x8>
 48a:	81 e0       	ldi	r24, 0x01	; 1
 48c:	08 95       	ret

0000048e <__divsf3>:
 48e:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <__divsf3x>
 492:	0c 94 60 03 	jmp	0x6c0	; 0x6c0 <__fp_round>
 496:	0e 94 59 03 	call	0x6b2	; 0x6b2 <__fp_pscB>
 49a:	58 f0       	brcs	.+22     	; 0x4b2 <__divsf3+0x24>
 49c:	0e 94 52 03 	call	0x6a4	; 0x6a4 <__fp_pscA>
 4a0:	40 f0       	brcs	.+16     	; 0x4b2 <__divsf3+0x24>
 4a2:	29 f4       	brne	.+10     	; 0x4ae <__divsf3+0x20>
 4a4:	5f 3f       	cpi	r21, 0xFF	; 255
 4a6:	29 f0       	breq	.+10     	; 0x4b2 <__divsf3+0x24>
 4a8:	0c 94 49 03 	jmp	0x692	; 0x692 <__fp_inf>
 4ac:	51 11       	cpse	r21, r1
 4ae:	0c 94 94 03 	jmp	0x728	; 0x728 <__fp_szero>
 4b2:	0c 94 4f 03 	jmp	0x69e	; 0x69e <__fp_nan>

000004b6 <__divsf3x>:
 4b6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__fp_split3>
 4ba:	68 f3       	brcs	.-38     	; 0x496 <__divsf3+0x8>

000004bc <__divsf3_pse>:
 4bc:	99 23       	and	r25, r25
 4be:	b1 f3       	breq	.-20     	; 0x4ac <__divsf3+0x1e>
 4c0:	55 23       	and	r21, r21
 4c2:	91 f3       	breq	.-28     	; 0x4a8 <__divsf3+0x1a>
 4c4:	95 1b       	sub	r25, r21
 4c6:	55 0b       	sbc	r21, r21
 4c8:	bb 27       	eor	r27, r27
 4ca:	aa 27       	eor	r26, r26
 4cc:	62 17       	cp	r22, r18
 4ce:	73 07       	cpc	r23, r19
 4d0:	84 07       	cpc	r24, r20
 4d2:	38 f0       	brcs	.+14     	; 0x4e2 <__divsf3_pse+0x26>
 4d4:	9f 5f       	subi	r25, 0xFF	; 255
 4d6:	5f 4f       	sbci	r21, 0xFF	; 255
 4d8:	22 0f       	add	r18, r18
 4da:	33 1f       	adc	r19, r19
 4dc:	44 1f       	adc	r20, r20
 4de:	aa 1f       	adc	r26, r26
 4e0:	a9 f3       	breq	.-22     	; 0x4cc <__divsf3_pse+0x10>
 4e2:	35 d0       	rcall	.+106    	; 0x54e <__divsf3_pse+0x92>
 4e4:	0e 2e       	mov	r0, r30
 4e6:	3a f0       	brmi	.+14     	; 0x4f6 <__divsf3_pse+0x3a>
 4e8:	e0 e8       	ldi	r30, 0x80	; 128
 4ea:	32 d0       	rcall	.+100    	; 0x550 <__divsf3_pse+0x94>
 4ec:	91 50       	subi	r25, 0x01	; 1
 4ee:	50 40       	sbci	r21, 0x00	; 0
 4f0:	e6 95       	lsr	r30
 4f2:	00 1c       	adc	r0, r0
 4f4:	ca f7       	brpl	.-14     	; 0x4e8 <__divsf3_pse+0x2c>
 4f6:	2b d0       	rcall	.+86     	; 0x54e <__divsf3_pse+0x92>
 4f8:	fe 2f       	mov	r31, r30
 4fa:	29 d0       	rcall	.+82     	; 0x54e <__divsf3_pse+0x92>
 4fc:	66 0f       	add	r22, r22
 4fe:	77 1f       	adc	r23, r23
 500:	88 1f       	adc	r24, r24
 502:	bb 1f       	adc	r27, r27
 504:	26 17       	cp	r18, r22
 506:	37 07       	cpc	r19, r23
 508:	48 07       	cpc	r20, r24
 50a:	ab 07       	cpc	r26, r27
 50c:	b0 e8       	ldi	r27, 0x80	; 128
 50e:	09 f0       	breq	.+2      	; 0x512 <__divsf3_pse+0x56>
 510:	bb 0b       	sbc	r27, r27
 512:	80 2d       	mov	r24, r0
 514:	bf 01       	movw	r22, r30
 516:	ff 27       	eor	r31, r31
 518:	93 58       	subi	r25, 0x83	; 131
 51a:	5f 4f       	sbci	r21, 0xFF	; 255
 51c:	3a f0       	brmi	.+14     	; 0x52c <__divsf3_pse+0x70>
 51e:	9e 3f       	cpi	r25, 0xFE	; 254
 520:	51 05       	cpc	r21, r1
 522:	78 f0       	brcs	.+30     	; 0x542 <__divsf3_pse+0x86>
 524:	0c 94 49 03 	jmp	0x692	; 0x692 <__fp_inf>
 528:	0c 94 94 03 	jmp	0x728	; 0x728 <__fp_szero>
 52c:	5f 3f       	cpi	r21, 0xFF	; 255
 52e:	e4 f3       	brlt	.-8      	; 0x528 <__divsf3_pse+0x6c>
 530:	98 3e       	cpi	r25, 0xE8	; 232
 532:	d4 f3       	brlt	.-12     	; 0x528 <__divsf3_pse+0x6c>
 534:	86 95       	lsr	r24
 536:	77 95       	ror	r23
 538:	67 95       	ror	r22
 53a:	b7 95       	ror	r27
 53c:	f7 95       	ror	r31
 53e:	9f 5f       	subi	r25, 0xFF	; 255
 540:	c9 f7       	brne	.-14     	; 0x534 <__divsf3_pse+0x78>
 542:	88 0f       	add	r24, r24
 544:	91 1d       	adc	r25, r1
 546:	96 95       	lsr	r25
 548:	87 95       	ror	r24
 54a:	97 f9       	bld	r25, 7
 54c:	08 95       	ret
 54e:	e1 e0       	ldi	r30, 0x01	; 1
 550:	66 0f       	add	r22, r22
 552:	77 1f       	adc	r23, r23
 554:	88 1f       	adc	r24, r24
 556:	bb 1f       	adc	r27, r27
 558:	62 17       	cp	r22, r18
 55a:	73 07       	cpc	r23, r19
 55c:	84 07       	cpc	r24, r20
 55e:	ba 07       	cpc	r27, r26
 560:	20 f0       	brcs	.+8      	; 0x56a <__divsf3_pse+0xae>
 562:	62 1b       	sub	r22, r18
 564:	73 0b       	sbc	r23, r19
 566:	84 0b       	sbc	r24, r20
 568:	ba 0b       	sbc	r27, r26
 56a:	ee 1f       	adc	r30, r30
 56c:	88 f7       	brcc	.-30     	; 0x550 <__divsf3_pse+0x94>
 56e:	e0 95       	com	r30
 570:	08 95       	ret

00000572 <__fixunssfsi>:
 572:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__fp_splitA>
 576:	88 f0       	brcs	.+34     	; 0x59a <__fixunssfsi+0x28>
 578:	9f 57       	subi	r25, 0x7F	; 127
 57a:	98 f0       	brcs	.+38     	; 0x5a2 <__fixunssfsi+0x30>
 57c:	b9 2f       	mov	r27, r25
 57e:	99 27       	eor	r25, r25
 580:	b7 51       	subi	r27, 0x17	; 23
 582:	b0 f0       	brcs	.+44     	; 0x5b0 <__fixunssfsi+0x3e>
 584:	e1 f0       	breq	.+56     	; 0x5be <__fixunssfsi+0x4c>
 586:	66 0f       	add	r22, r22
 588:	77 1f       	adc	r23, r23
 58a:	88 1f       	adc	r24, r24
 58c:	99 1f       	adc	r25, r25
 58e:	1a f0       	brmi	.+6      	; 0x596 <__fixunssfsi+0x24>
 590:	ba 95       	dec	r27
 592:	c9 f7       	brne	.-14     	; 0x586 <__fixunssfsi+0x14>
 594:	14 c0       	rjmp	.+40     	; 0x5be <__fixunssfsi+0x4c>
 596:	b1 30       	cpi	r27, 0x01	; 1
 598:	91 f0       	breq	.+36     	; 0x5be <__fixunssfsi+0x4c>
 59a:	0e 94 93 03 	call	0x726	; 0x726 <__fp_zero>
 59e:	b1 e0       	ldi	r27, 0x01	; 1
 5a0:	08 95       	ret
 5a2:	0c 94 93 03 	jmp	0x726	; 0x726 <__fp_zero>
 5a6:	67 2f       	mov	r22, r23
 5a8:	78 2f       	mov	r23, r24
 5aa:	88 27       	eor	r24, r24
 5ac:	b8 5f       	subi	r27, 0xF8	; 248
 5ae:	39 f0       	breq	.+14     	; 0x5be <__fixunssfsi+0x4c>
 5b0:	b9 3f       	cpi	r27, 0xF9	; 249
 5b2:	cc f3       	brlt	.-14     	; 0x5a6 <__fixunssfsi+0x34>
 5b4:	86 95       	lsr	r24
 5b6:	77 95       	ror	r23
 5b8:	67 95       	ror	r22
 5ba:	b3 95       	inc	r27
 5bc:	d9 f7       	brne	.-10     	; 0x5b4 <__fixunssfsi+0x42>
 5be:	3e f4       	brtc	.+14     	; 0x5ce <__fixunssfsi+0x5c>
 5c0:	90 95       	com	r25
 5c2:	80 95       	com	r24
 5c4:	70 95       	com	r23
 5c6:	61 95       	neg	r22
 5c8:	7f 4f       	sbci	r23, 0xFF	; 255
 5ca:	8f 4f       	sbci	r24, 0xFF	; 255
 5cc:	9f 4f       	sbci	r25, 0xFF	; 255
 5ce:	08 95       	ret

000005d0 <__floatunsisf>:
 5d0:	e8 94       	clt
 5d2:	09 c0       	rjmp	.+18     	; 0x5e6 <__floatsisf+0x12>

000005d4 <__floatsisf>:
 5d4:	97 fb       	bst	r25, 7
 5d6:	3e f4       	brtc	.+14     	; 0x5e6 <__floatsisf+0x12>
 5d8:	90 95       	com	r25
 5da:	80 95       	com	r24
 5dc:	70 95       	com	r23
 5de:	61 95       	neg	r22
 5e0:	7f 4f       	sbci	r23, 0xFF	; 255
 5e2:	8f 4f       	sbci	r24, 0xFF	; 255
 5e4:	9f 4f       	sbci	r25, 0xFF	; 255
 5e6:	99 23       	and	r25, r25
 5e8:	a9 f0       	breq	.+42     	; 0x614 <__floatsisf+0x40>
 5ea:	f9 2f       	mov	r31, r25
 5ec:	96 e9       	ldi	r25, 0x96	; 150
 5ee:	bb 27       	eor	r27, r27
 5f0:	93 95       	inc	r25
 5f2:	f6 95       	lsr	r31
 5f4:	87 95       	ror	r24
 5f6:	77 95       	ror	r23
 5f8:	67 95       	ror	r22
 5fa:	b7 95       	ror	r27
 5fc:	f1 11       	cpse	r31, r1
 5fe:	f8 cf       	rjmp	.-16     	; 0x5f0 <__floatsisf+0x1c>
 600:	fa f4       	brpl	.+62     	; 0x640 <__floatsisf+0x6c>
 602:	bb 0f       	add	r27, r27
 604:	11 f4       	brne	.+4      	; 0x60a <__floatsisf+0x36>
 606:	60 ff       	sbrs	r22, 0
 608:	1b c0       	rjmp	.+54     	; 0x640 <__floatsisf+0x6c>
 60a:	6f 5f       	subi	r22, 0xFF	; 255
 60c:	7f 4f       	sbci	r23, 0xFF	; 255
 60e:	8f 4f       	sbci	r24, 0xFF	; 255
 610:	9f 4f       	sbci	r25, 0xFF	; 255
 612:	16 c0       	rjmp	.+44     	; 0x640 <__floatsisf+0x6c>
 614:	88 23       	and	r24, r24
 616:	11 f0       	breq	.+4      	; 0x61c <__floatsisf+0x48>
 618:	96 e9       	ldi	r25, 0x96	; 150
 61a:	11 c0       	rjmp	.+34     	; 0x63e <__floatsisf+0x6a>
 61c:	77 23       	and	r23, r23
 61e:	21 f0       	breq	.+8      	; 0x628 <__floatsisf+0x54>
 620:	9e e8       	ldi	r25, 0x8E	; 142
 622:	87 2f       	mov	r24, r23
 624:	76 2f       	mov	r23, r22
 626:	05 c0       	rjmp	.+10     	; 0x632 <__floatsisf+0x5e>
 628:	66 23       	and	r22, r22
 62a:	71 f0       	breq	.+28     	; 0x648 <__floatsisf+0x74>
 62c:	96 e8       	ldi	r25, 0x86	; 134
 62e:	86 2f       	mov	r24, r22
 630:	70 e0       	ldi	r23, 0x00	; 0
 632:	60 e0       	ldi	r22, 0x00	; 0
 634:	2a f0       	brmi	.+10     	; 0x640 <__floatsisf+0x6c>
 636:	9a 95       	dec	r25
 638:	66 0f       	add	r22, r22
 63a:	77 1f       	adc	r23, r23
 63c:	88 1f       	adc	r24, r24
 63e:	da f7       	brpl	.-10     	; 0x636 <__floatsisf+0x62>
 640:	88 0f       	add	r24, r24
 642:	96 95       	lsr	r25
 644:	87 95       	ror	r24
 646:	97 f9       	bld	r25, 7
 648:	08 95       	ret

0000064a <__fp_cmp>:
 64a:	99 0f       	add	r25, r25
 64c:	00 08       	sbc	r0, r0
 64e:	55 0f       	add	r21, r21
 650:	aa 0b       	sbc	r26, r26
 652:	e0 e8       	ldi	r30, 0x80	; 128
 654:	fe ef       	ldi	r31, 0xFE	; 254
 656:	16 16       	cp	r1, r22
 658:	17 06       	cpc	r1, r23
 65a:	e8 07       	cpc	r30, r24
 65c:	f9 07       	cpc	r31, r25
 65e:	c0 f0       	brcs	.+48     	; 0x690 <__fp_cmp+0x46>
 660:	12 16       	cp	r1, r18
 662:	13 06       	cpc	r1, r19
 664:	e4 07       	cpc	r30, r20
 666:	f5 07       	cpc	r31, r21
 668:	98 f0       	brcs	.+38     	; 0x690 <__fp_cmp+0x46>
 66a:	62 1b       	sub	r22, r18
 66c:	73 0b       	sbc	r23, r19
 66e:	84 0b       	sbc	r24, r20
 670:	95 0b       	sbc	r25, r21
 672:	39 f4       	brne	.+14     	; 0x682 <__fp_cmp+0x38>
 674:	0a 26       	eor	r0, r26
 676:	61 f0       	breq	.+24     	; 0x690 <__fp_cmp+0x46>
 678:	23 2b       	or	r18, r19
 67a:	24 2b       	or	r18, r20
 67c:	25 2b       	or	r18, r21
 67e:	21 f4       	brne	.+8      	; 0x688 <__fp_cmp+0x3e>
 680:	08 95       	ret
 682:	0a 26       	eor	r0, r26
 684:	09 f4       	brne	.+2      	; 0x688 <__fp_cmp+0x3e>
 686:	a1 40       	sbci	r26, 0x01	; 1
 688:	a6 95       	lsr	r26
 68a:	8f ef       	ldi	r24, 0xFF	; 255
 68c:	81 1d       	adc	r24, r1
 68e:	81 1d       	adc	r24, r1
 690:	08 95       	ret

00000692 <__fp_inf>:
 692:	97 f9       	bld	r25, 7
 694:	9f 67       	ori	r25, 0x7F	; 127
 696:	80 e8       	ldi	r24, 0x80	; 128
 698:	70 e0       	ldi	r23, 0x00	; 0
 69a:	60 e0       	ldi	r22, 0x00	; 0
 69c:	08 95       	ret

0000069e <__fp_nan>:
 69e:	9f ef       	ldi	r25, 0xFF	; 255
 6a0:	80 ec       	ldi	r24, 0xC0	; 192
 6a2:	08 95       	ret

000006a4 <__fp_pscA>:
 6a4:	00 24       	eor	r0, r0
 6a6:	0a 94       	dec	r0
 6a8:	16 16       	cp	r1, r22
 6aa:	17 06       	cpc	r1, r23
 6ac:	18 06       	cpc	r1, r24
 6ae:	09 06       	cpc	r0, r25
 6b0:	08 95       	ret

000006b2 <__fp_pscB>:
 6b2:	00 24       	eor	r0, r0
 6b4:	0a 94       	dec	r0
 6b6:	12 16       	cp	r1, r18
 6b8:	13 06       	cpc	r1, r19
 6ba:	14 06       	cpc	r1, r20
 6bc:	05 06       	cpc	r0, r21
 6be:	08 95       	ret

000006c0 <__fp_round>:
 6c0:	09 2e       	mov	r0, r25
 6c2:	03 94       	inc	r0
 6c4:	00 0c       	add	r0, r0
 6c6:	11 f4       	brne	.+4      	; 0x6cc <__fp_round+0xc>
 6c8:	88 23       	and	r24, r24
 6ca:	52 f0       	brmi	.+20     	; 0x6e0 <__fp_round+0x20>
 6cc:	bb 0f       	add	r27, r27
 6ce:	40 f4       	brcc	.+16     	; 0x6e0 <__fp_round+0x20>
 6d0:	bf 2b       	or	r27, r31
 6d2:	11 f4       	brne	.+4      	; 0x6d8 <__fp_round+0x18>
 6d4:	60 ff       	sbrs	r22, 0
 6d6:	04 c0       	rjmp	.+8      	; 0x6e0 <__fp_round+0x20>
 6d8:	6f 5f       	subi	r22, 0xFF	; 255
 6da:	7f 4f       	sbci	r23, 0xFF	; 255
 6dc:	8f 4f       	sbci	r24, 0xFF	; 255
 6de:	9f 4f       	sbci	r25, 0xFF	; 255
 6e0:	08 95       	ret

000006e2 <__fp_split3>:
 6e2:	57 fd       	sbrc	r21, 7
 6e4:	90 58       	subi	r25, 0x80	; 128
 6e6:	44 0f       	add	r20, r20
 6e8:	55 1f       	adc	r21, r21
 6ea:	59 f0       	breq	.+22     	; 0x702 <__fp_splitA+0x10>
 6ec:	5f 3f       	cpi	r21, 0xFF	; 255
 6ee:	71 f0       	breq	.+28     	; 0x70c <__fp_splitA+0x1a>
 6f0:	47 95       	ror	r20

000006f2 <__fp_splitA>:
 6f2:	88 0f       	add	r24, r24
 6f4:	97 fb       	bst	r25, 7
 6f6:	99 1f       	adc	r25, r25
 6f8:	61 f0       	breq	.+24     	; 0x712 <__fp_splitA+0x20>
 6fa:	9f 3f       	cpi	r25, 0xFF	; 255
 6fc:	79 f0       	breq	.+30     	; 0x71c <__fp_splitA+0x2a>
 6fe:	87 95       	ror	r24
 700:	08 95       	ret
 702:	12 16       	cp	r1, r18
 704:	13 06       	cpc	r1, r19
 706:	14 06       	cpc	r1, r20
 708:	55 1f       	adc	r21, r21
 70a:	f2 cf       	rjmp	.-28     	; 0x6f0 <__fp_split3+0xe>
 70c:	46 95       	lsr	r20
 70e:	f1 df       	rcall	.-30     	; 0x6f2 <__fp_splitA>
 710:	08 c0       	rjmp	.+16     	; 0x722 <__fp_splitA+0x30>
 712:	16 16       	cp	r1, r22
 714:	17 06       	cpc	r1, r23
 716:	18 06       	cpc	r1, r24
 718:	99 1f       	adc	r25, r25
 71a:	f1 cf       	rjmp	.-30     	; 0x6fe <__fp_splitA+0xc>
 71c:	86 95       	lsr	r24
 71e:	71 05       	cpc	r23, r1
 720:	61 05       	cpc	r22, r1
 722:	08 94       	sec
 724:	08 95       	ret

00000726 <__fp_zero>:
 726:	e8 94       	clt

00000728 <__fp_szero>:
 728:	bb 27       	eor	r27, r27
 72a:	66 27       	eor	r22, r22
 72c:	77 27       	eor	r23, r23
 72e:	cb 01       	movw	r24, r22
 730:	97 f9       	bld	r25, 7
 732:	08 95       	ret

00000734 <__gesf2>:
 734:	0e 94 25 03 	call	0x64a	; 0x64a <__fp_cmp>
 738:	08 f4       	brcc	.+2      	; 0x73c <__gesf2+0x8>
 73a:	8f ef       	ldi	r24, 0xFF	; 255
 73c:	08 95       	ret

0000073e <__mulsf3>:
 73e:	0e 94 b2 03 	call	0x764	; 0x764 <__mulsf3x>
 742:	0c 94 60 03 	jmp	0x6c0	; 0x6c0 <__fp_round>
 746:	0e 94 52 03 	call	0x6a4	; 0x6a4 <__fp_pscA>
 74a:	38 f0       	brcs	.+14     	; 0x75a <__mulsf3+0x1c>
 74c:	0e 94 59 03 	call	0x6b2	; 0x6b2 <__fp_pscB>
 750:	20 f0       	brcs	.+8      	; 0x75a <__mulsf3+0x1c>
 752:	95 23       	and	r25, r21
 754:	11 f0       	breq	.+4      	; 0x75a <__mulsf3+0x1c>
 756:	0c 94 49 03 	jmp	0x692	; 0x692 <__fp_inf>
 75a:	0c 94 4f 03 	jmp	0x69e	; 0x69e <__fp_nan>
 75e:	11 24       	eor	r1, r1
 760:	0c 94 94 03 	jmp	0x728	; 0x728 <__fp_szero>

00000764 <__mulsf3x>:
 764:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__fp_split3>
 768:	70 f3       	brcs	.-36     	; 0x746 <__mulsf3+0x8>

0000076a <__mulsf3_pse>:
 76a:	95 9f       	mul	r25, r21
 76c:	c1 f3       	breq	.-16     	; 0x75e <__mulsf3+0x20>
 76e:	95 0f       	add	r25, r21
 770:	50 e0       	ldi	r21, 0x00	; 0
 772:	55 1f       	adc	r21, r21
 774:	62 9f       	mul	r22, r18
 776:	f0 01       	movw	r30, r0
 778:	72 9f       	mul	r23, r18
 77a:	bb 27       	eor	r27, r27
 77c:	f0 0d       	add	r31, r0
 77e:	b1 1d       	adc	r27, r1
 780:	63 9f       	mul	r22, r19
 782:	aa 27       	eor	r26, r26
 784:	f0 0d       	add	r31, r0
 786:	b1 1d       	adc	r27, r1
 788:	aa 1f       	adc	r26, r26
 78a:	64 9f       	mul	r22, r20
 78c:	66 27       	eor	r22, r22
 78e:	b0 0d       	add	r27, r0
 790:	a1 1d       	adc	r26, r1
 792:	66 1f       	adc	r22, r22
 794:	82 9f       	mul	r24, r18
 796:	22 27       	eor	r18, r18
 798:	b0 0d       	add	r27, r0
 79a:	a1 1d       	adc	r26, r1
 79c:	62 1f       	adc	r22, r18
 79e:	73 9f       	mul	r23, r19
 7a0:	b0 0d       	add	r27, r0
 7a2:	a1 1d       	adc	r26, r1
 7a4:	62 1f       	adc	r22, r18
 7a6:	83 9f       	mul	r24, r19
 7a8:	a0 0d       	add	r26, r0
 7aa:	61 1d       	adc	r22, r1
 7ac:	22 1f       	adc	r18, r18
 7ae:	74 9f       	mul	r23, r20
 7b0:	33 27       	eor	r19, r19
 7b2:	a0 0d       	add	r26, r0
 7b4:	61 1d       	adc	r22, r1
 7b6:	23 1f       	adc	r18, r19
 7b8:	84 9f       	mul	r24, r20
 7ba:	60 0d       	add	r22, r0
 7bc:	21 1d       	adc	r18, r1
 7be:	82 2f       	mov	r24, r18
 7c0:	76 2f       	mov	r23, r22
 7c2:	6a 2f       	mov	r22, r26
 7c4:	11 24       	eor	r1, r1
 7c6:	9f 57       	subi	r25, 0x7F	; 127
 7c8:	50 40       	sbci	r21, 0x00	; 0
 7ca:	9a f0       	brmi	.+38     	; 0x7f2 <__mulsf3_pse+0x88>
 7cc:	f1 f0       	breq	.+60     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 7ce:	88 23       	and	r24, r24
 7d0:	4a f0       	brmi	.+18     	; 0x7e4 <__mulsf3_pse+0x7a>
 7d2:	ee 0f       	add	r30, r30
 7d4:	ff 1f       	adc	r31, r31
 7d6:	bb 1f       	adc	r27, r27
 7d8:	66 1f       	adc	r22, r22
 7da:	77 1f       	adc	r23, r23
 7dc:	88 1f       	adc	r24, r24
 7de:	91 50       	subi	r25, 0x01	; 1
 7e0:	50 40       	sbci	r21, 0x00	; 0
 7e2:	a9 f7       	brne	.-22     	; 0x7ce <__mulsf3_pse+0x64>
 7e4:	9e 3f       	cpi	r25, 0xFE	; 254
 7e6:	51 05       	cpc	r21, r1
 7e8:	80 f0       	brcs	.+32     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 7ea:	0c 94 49 03 	jmp	0x692	; 0x692 <__fp_inf>
 7ee:	0c 94 94 03 	jmp	0x728	; 0x728 <__fp_szero>
 7f2:	5f 3f       	cpi	r21, 0xFF	; 255
 7f4:	e4 f3       	brlt	.-8      	; 0x7ee <__mulsf3_pse+0x84>
 7f6:	98 3e       	cpi	r25, 0xE8	; 232
 7f8:	d4 f3       	brlt	.-12     	; 0x7ee <__mulsf3_pse+0x84>
 7fa:	86 95       	lsr	r24
 7fc:	77 95       	ror	r23
 7fe:	67 95       	ror	r22
 800:	b7 95       	ror	r27
 802:	f7 95       	ror	r31
 804:	e7 95       	ror	r30
 806:	9f 5f       	subi	r25, 0xFF	; 255
 808:	c1 f7       	brne	.-16     	; 0x7fa <__mulsf3_pse+0x90>
 80a:	fe 2b       	or	r31, r30
 80c:	88 0f       	add	r24, r24
 80e:	91 1d       	adc	r25, r1
 810:	96 95       	lsr	r25
 812:	87 95       	ror	r24
 814:	97 f9       	bld	r25, 7
 816:	08 95       	ret

00000818 <_exit>:
 818:	f8 94       	cli

0000081a <__stop_program>:
 81a:	ff cf       	rjmp	.-2      	; 0x81a <__stop_program>
